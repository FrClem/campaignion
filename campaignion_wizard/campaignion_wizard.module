<?php

use \Drupal\campaignion\Action\TypeBase;

/**
 * Implements hook_menu().
 */
function campaignion_wizard_menu() {
  $wizards = TypeBase::types();
  foreach ($wizards as $id => $wizard) {
    $info['wizard/' . str_replace('_', '-', $id)] = array(
      'title'            => 'Wizard',
      'page callback'    => 'campaignion_wizard_new',
      'page arguments'   => array($id),
      'access arguments' => array('administer nodes'),
      'type' => MENU_CALLBACK,
    );
  }
  $info['node/%node/wizard/%'] = array(
    'title'            => 'Edit',
    'page callback'    => 'campaignion_wizard',
    'page arguments'   => array(1, 3),
    'access arguments' => array('administer nodes'),
    'type' => MENU_CALLBACK,
  );
  $info['node/%node/wizard'] = array(
    'title'          => 'Edit',
    'page arguments' => array(1, 'content'),
  ) + $info['node/%node/wizard/%'];
  return $info;
}

/**
 * Implements hook_menu_alter().
 *
 * Override core node edit pages.
 */
function campaignion_wizard_menu_alter(&$info) {
  $wizards = TypeBase::types();
  $hidden = array('type' => MENU_CALLBACK);
  $local  = array('type' => MENU_LOCAL_TASK);
  foreach ($wizards as $id => $wizard) {
    $type = str_replace('_', '-', $id);
    $old = $info['node/add/' . $type];
    $info['node/core-add/' . $type] = $hidden + $old;
    $info['node/add/' . $type] = array(
      'type' => MENU_NORMAL_ITEM,
      'title' => $old['title'],
      'description' => $old['description'],
    ) + $info['wizard/' . $type];
  }

  $info['node/%node/core-edit'] = $hidden + $info['node/%node/edit'];
  $info['node/%node/edit'] = $local + $info['node/%node/wizard'];
  $info['node/%node/webform']['type'] = MENU_LOCAL_TASK;
}

function campaignion_wizard_new($type) {
  $type = str_replace('-', '_', $type);
  try {
    $actionType = TypeBase::fromContentType($type);
  }
  catch (\Exception $e) {
    return drupal_not_found();
  }
  return $actionType->wizard()->run('content');
}

function campaignion_wizard($node = NULL, $step = 'content') {
  $type = $node->type;
  if (TypeBase::isAction($type)) {
    $actionType = TypeBase::fromContentType($type);
    return $actionType->wizard($node)->run($step);
  }
  else {
    require_once drupal_get_path('module', 'node') . '/node.pages.inc';
    return node_page_edit($node);
  }
}

/**
 * Implements hook_admin_paths().
 */
function campaignion_wizard_admin_paths() {
  $paths = array();
  $paths['node/*/wizard/*'] = TRUE;
  $paths['node/*/wizard'] = TRUE;
  $paths['wizard/*'] = TRUE;
  return $paths;
}

function campaignion_wizard_has_double_optin($nid) {
  return db_query(
    'SELECT TRUE ' .
    '  FROM {webform_confirm_email} ' .
    '    WHERE nid        = :nid ' .
    '    AND   email_type = :conf_request ' ,
    array(
      ':nid'          => $nid,
      ':conf_request' => WEBFORM_CONFIRM_EMAIL_CONFIRMATION_REQUEST,
    )
  )->fetchField();
}

function campaignion_wizard_set_confirmation_redirect_url($nid, $url) {
  db_query(
    'UPDATE {webform_confirm_email} ' .
    '  SET redirect_url = :url ' .
    '    WHERE nid        = :nid ' .
    '    AND   email_type = :conf_request ' ,
    array(
      ':url'          => $url,
      ':nid'          => $nid,
      ':conf_request' => WEBFORM_CONFIRM_EMAIL_CONFIRMATION_REQUEST,
    )
  );
}

/**
 * Implements hook_theme
 * Used for better control of webform emails setting form
 */
function campaignion_wizard_theme() {
  $items['campaignion_wizard_email_form'] = array(
    'render element' => 'form',
    'file'           => 'campaignion_wizard.theme.php',
  );

  return $items;
}

