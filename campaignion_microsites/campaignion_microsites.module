<?php

/**
 * Implements hook_custom_theme().
 */
function campaignion_microsites_custom_theme() {
  $node = menu_get_object();
  if (empty($node->nid)) {
    return;
  }
  if ($node->type === 'campaign' || $node->type === 'blog') {
    $campaign = $node;
  } elseif($reference = field_get_items('node', $node, 'field_reference_to_campaign')) {
    $campaign = node_load(array_shift($reference[0]));
  } else {
    return;
  }

  $items = field_get_items('node', $campaign, 'field_microsite');
  if (count($items) > 0 && $items[0]['state']) {
    $GLOBALS['microsite'] = array(
      'logo' => $items[0]['logo'],
      'front_page' => $items[0]['frontpage'],
      'theme' => $items[0]['theme'],
    );
    $theme = &$GLOBALS['microsite']['theme'];
    return ($theme === 'none') ? NULL : $theme;
  }
}

/**
 * Implements hook_preprocess_page().
 */
function campaignion_microsites_preprocess_page(&$vars) {
  if (empty($GLOBALS['microsite'])) {
    return;
  }
  $microsite = &$GLOBALS['microsite'];
  if (!empty($vars['logo']) && !empty($microsite['logo'])) {
    $vars['logo'] = url($microsite['logo']);
  }
  if (!empty($vars['front_page']) && !empty($microsite['front_page'])) {
    $vars['front_page'] = url($microsite['front_page']);
  }
}

/**
 * Implements hook_field_info().
 */
function campaignion_microsites_field_info() {
  $info['microsite'] = array(
    'label' => t('Microsite'),
    'description' => t('Turns node into microsites with custom frontpage, theme and icon.'),
    'settings' => array('style' => NULL),
    'default_widget' => 'microsite',
    'default_formatter' => 'hidden',
  );
  return $info;
}

/**
 * Implements hook_field_widget_info().
 */
function campaignion_microsites_field_widget_info() {
  $info['microsite'] = array(
    'label' => t('Microsite settings'),
    'field types' => array('microsite'),
    'settings' => array(),
    'behaviors' => array(
      'multiple values' => FIELD_BEHAVIOR_DEFAULT,
      'default values' => FIELD_BEHAVIOR_DEFAULT,
    ),
  );
  return $info;
}

/**
 * Implements hook_field_widget_form().
 */
function campaignion_microsites_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $item = array();
  if (isset($items[$delta])) {
    $item = &$items[$delta];
  }
  $item = drupal_array_merge_deep(array(
    'state' => FALSE,
    'frontpage' => NULL,
    'theme' => NULL,
    'logo' => NULL,
  ), $item);

  $element['state'] = array(
    '#title' => t('This page is a microsite.'),
    '#description' => t("If enabled theme, logo and frontpage will be altered for all pages that are part of this microsite."),
    '#type' => 'checkbox',
    '#default_value' => $item['state'],
  );
  $element['options'] = array(
    '#type' => 'fieldset',
    '#title' => t('Microsite settings'),
    '#states' => array(
        'invisible' => array("#edit-" . strtr($field['field_name'], '_', '-') . "-und-$delta-state" => array('checked' => FALSE)),
    ),
  );
  $themes = array('' => t("Use default theme."));
  foreach (list_themes() as $theme) {
    if ($theme->status) {
      $themes[$theme->name] = $theme->info['name'];
    }
  }
  $element['options']['theme'] = array(
    '#type' => 'select',
    '#title' => t('Theme'),
    '#options' => $themes,
    '#default_value' => $item['theme'],
  );
  $element['options']['frontpage'] = array(
    '#type' => 'textfield',
    '#title' => t('Frontpage (path)'),
    '#default_value' => $item['frontpage'],
  );
  $element['options']['logo'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to logo file.'),
    '#default_value' => $item['logo'],
  );

  $element += array(
    '#type' => 'fieldset',
    '#title' => t('Microsite'),
    '#element_validate' => array('campaignion_microsites_field_widget_validate'),
  );

  return $element;
}

/**
 * Validate callback for the campaignion_microsites_field_widget_form().
 */
function campaignion_microsites_field_widget_validate(&$element, &$form_state) {
  $item = &$form_state['values'];
  foreach ($element['#parents'] as $key) {
    $item = &$item[$key];
  }
  if (isset($item['options']) && is_array($item['options'])) {
    foreach ($item['options'] as $name => $value) {
      $item[$name] = $value;
    }
  }
}

/**
 * Implements hook_field_is_empty().
 */
function campaignion_microsites_field_is_empty($item, $field) {
  return FALSE;
}
