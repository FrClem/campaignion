<?php

/**
 * Implements hook_form_(form_id)_alter().
 */
function webform_steps_form_webform_client_form_alter(&$form, &$form_state, $form_id) {
  $page_count = $form['details']['page_count']['#value'];
  if($page_count > 1) {
    $nid = $form['#node']->nid;
    $node = node_load($nid);
    $page_num = $form['details']['page_num']['#value'];
    $steps = _webform_steps_generate($form, $form_state);

    array_unshift($form['#submit'], '_webform_steps_mark_step_done');

    array_unshift($form['#validate'], '_webform_steps_clear');

    $button_label = t('Next');
    if($page_num === 1 && $node->webform['first_button_text']) {
      $button_label = $node->webform['first_button_text'];
    } else if ($page_num > 1 && $node->webform['next_button_text']) {
      $button_label = $node->webform['next_button_text'];
    }


    $form['actions']['next']['#value'] = $button_label;
    $form['actions']['next']['#name'] = 'next';
    if (isset($form['actions']['previous'])) {
      $form['actions']['previous']['#value'] = t('Previous');
    }
    $form['actions']['previous']['#access'] = FALSE;
    $form['submitted']['steps'] = array(
      '#type' => 'container',
      '#weight' => -1000,
      '#attributes' => array('id' => array('webform-steps-wrapper'), 'class' => array('webform-steps-wrapper')),
    ) + $steps;
  }
  //dpm($form);
  return $form;
}

function _webform_steps_clear($form, &$form_state) {
  unset($form_state['values']['submitted']['steps']);
  unset($form_state['values']['submitted']['step_payment_method']['selected']);
}

function _webform_steps_generate($form, $form_state) {
  $components = $form['#node']->webform['components'];
  $use_ajax = FALSE;
  if (module_exists('webform_ajax') && $form['#node']->webform['webform_ajax']) {
    $use_ajax = TRUE;
  };

  $pagebreak_names = array();
  $fieldset_weights = array();
  foreach ($components as $component) {
    $page_num = $component['page_num'];
    // use the fieldset with the lowest weight, omit nested fieldsets
    if($component['type'] === 'fieldset' && $component['pid'] === '0') {
      if(!isset($fieldset_weights[$page_num]) || $component['weight'] < $fieldset_weights[$page_num]) {
        $pagebreak_names[$page_num] = $component['name'];
        $fieldset_weights[$page_num] = $component['weight'];
      }
    }
    // use the title of the page break (will be overriden by any fieldset
    // on the same step page)
    if($component['type'] === 'pagebreak') {
      // set it only if not set already by a step name field
      if(!isset($pagebreak_names[$page_num])) {
        $pagebreak_names[$page_num] = $component['name'];
      }
    }
  }
  $count = $form['details']['page_count']['#value'];
  $current = $form['details']['page_num']['#value'];
  $finished = isset($form_state['steps_finished']) ? $form_state['steps_finished'] : 0;

  $steps = array();
  $button_builder = new WebformStepsButtonBuilder($current, $finished);
  if ($use_ajax) {
    $this->activateAjax($form_state, $form);
  }

  for ($i = 1; $i <= $count; $i++) {
    $title = isset($pagebreak_names[$i]) ? $pagebreak_names[$i] : t('No label');
    $steps['btn-' . $i] = $button_builder->buildButton($i, $title); 
  }

  // thank you step
  $steps['thank-you'] = array(
    '#prefix' => '<span class="webform-step disabled last"><span>' . t('Thank you'),
    '#suffix' => '</span></span>',
    '#markup' => '<div class="step-button">' . ($count + 1) . '</div>',
  );

  return $steps;
}

class WebformStepsButtonBuilder {
  protected $default = array();
  protected $current = 0;
  protected $finished = 0;
  public function __construct($current, $finished) {
    $this->current = $current;
    $this->finished = $finished;
    $this->default = array(
      '#type' => 'submit',
      '#submit' => array('webform_steps_navigation_callback', 'webform_client_form_pages', 'webform_client_form_submit'),
      '#attributes' => array('class' => array('step-button')),
      '#name' => 'step-btn',
    );
  }

  public function activateAjax(&$form_state, &$form) {
    // generate wrapper id like in webform_ajax.module
    // we have to create it on our own because webform_ajax runs after us
    $wrapper = '';
    if (isset($form_state['values']['webform_ajax_wrapper_id'])) {
      $wrapper = $form_state['values']['webform_ajax_wrapper_id'];
    }
    elseif (isset($form['#node']->webform['webform_ajax_wrapper_id'])) {
      $wrapper = $form['#node']->webform['webform_ajax_wrapper_id'];
    }
    else {
      // At last, generate a unique ID.
      $wrapper = 'webform-ajax-wrapper-' . $form['#node']->nid;
    }

    $this->default['#ajax'] = array(
      'effect' => 'none',
      'callback' => 'webform_ajax_callback',
      'wrapper' => $wrapper,
      'progress' => array(
        'message' => '',
        'type' => 'none',
      ),
    );
  }
  
  public function buildButton($i, $title) {
    $button = $this->default;
    $wrapper_classes = array();
    if($i === $this->current) {
      $wrapper_classes[] = 'current';
    }
    if ($i == 1) {
      $button['#attributes']['class'][] = 'first';
    }
    if($i > ($this->finished + 1)) {
      $wrapper_classes[] = 'disabled';
      $button['#attributes']['class'][] = 'disabled';
      $button['#attributes']['disabled'] = 'disabled';
    }
    if (isset($button['#ajax'])) {
      $button['#id'] = drupal_html_id('edit-webform-ajax-btn-' . $i);
    }
    $button += array(
      '#prefix' => '<span class="webform-step ' . implode(' ', $wrapper_classes) . '"><span>' . $title,
      '#suffix' => '</span></span>',
      '#value' => $i,
    );
    return $button;
  }
}

/**
 * to generate the steps on a thank you page
 * (confirmation or redirected page)
 */
function _webform_steps_generate_step_thank_you($node) {
  $components = $node->webform['components'];
  $pagebreak_names = array();
  $fieldset_weights = array();
  foreach ($components as $component) {
    $page_num = $component['page_num'];
    // use the fieldset with the lowest weight, omit nested fieldsets
    if($component['type'] === 'fieldset' && $component['pid'] === '0') {
      if(!isset($fieldset_weights[$page_num]) || $component['weight'] < $fieldset_weights[$page_num]) {
        $pagebreak_names[$page_num] = $component['name'];
        $fieldset_weights[$page_num] = $component['weight'];
      }
    }
    // use the title of the page break (will be overriden by any fieldset
    // on the same step page)
    if($component['type'] === 'pagebreak') {
      // set it only if not set already by a step name field
      if(!isset($pagebreak_names[$page_num])) {
        $pagebreak_names[$page_num] = $component['name'];
      }
    }
  }
  $count = count($pagebreak_names);

  $steps = array();
  $i = 1;
  $button_builder = new WebformStepsButtonBuilder($count + 1, 0);
  while($i <= $count) {
    $title = isset($pagebreak_names[$i]) ? $pagebreak_names[$i] : t('No label');
    $steps['btn-' . $i] = $button_builder->buildButton($i, $title);
    $i++;
  }

  // thank you step
  $steps['thank-you'] = array(
    '#prefix' => '<span class="webform-step current"><span>' . t('Thank you'),
    '#suffix' => '</span></span>',
    '#markup' => '<div class="step-button">' . ($count + 1) . '</div>',
  );

  $stepsarray['steps'] = array(
      '#type' => 'container',
      '#weight' => -1000,
      '#attributes' => array('id' => array('webform-steps-wrapper'), 'class' => array('webform-steps-wrapper')),
    ) + $steps;

  if ($count < 2) {
    return array();
  } else {
    return $stepsarray;
  }
}

function webform_steps_navigation_callback(&$form, &$form_state) {
  $form_state['values']['op'] = 'next';
  $value = $form_state['clicked_button']['#value'];
  $form_state['webform']['page_num'] = $value + 1;
  // if we try to click on last page
  // --> use different logic and trick the webform_client_form_pages #submit
  // into believing, that we are coming from the second to last page
  if($value == $form_state['webform']['page_count']) {
    $form_state['clicked_button']['#parents'][] =  'next';
    $form_state['webform']['page_num'] = $value - 1;
  }
  return $form;
}
function _webform_steps_mark_step_done(&$form, &$form_state) {
  $finished = isset($form_state['steps_finished']) ? $form_state['steps_finished'] : 0;
  $current_step = $form['details']['page_num']['#value'];
  if ($current_step > $finished) {
    $form_state['steps_finished'] = $form['details']['page_num']['#value'];
  }

  // set this session var for use in redirected nodes
  // see: global_webform_steps_node_view
  $nid = $form['#node']->nid;
  $_SESSION['redirected_from_nid'] = $nid;

  return $form;
}

/**
 * Implements hook_node_view().
 *
 * display the steps of the redirecting webform if you are
 * on a thank_you_page node.
 */
function webform_steps_node_view($node) {
  if ($node->type == 'thank_you_page') {
    $nid = '';
    if (isset($_SESSION['redirected_from_nid'])) {
      $nid = $_SESSION['redirected_from_nid'];
      unset($_SESSION['redirected_from_nid']);
    } else if(isset($_GET['share'])) {
      $nid = substr($_GET['share'], 5);
    };
    if ($from_node = node_load($nid)) {
      $step_thank_you = _webform_steps_generate_step_thank_you($from_node);
      $node->content['steps'] = array(
        '#type' => 'markup',
        '#weight' => -100,
        '#markup' => drupal_render($step_thank_you),
      );
    }
  }
}

//function webform_steps_block_info() {
//  $block['steps'] = array(
//    'info' => t('Webform Steps'),
//    'cache' => DRUPAL_NO_CACHE,
//  );
//  return $block;
//}
//
//function webform_steps_block_view($delta = '') {
//  $node = menu_get_object();
//  $block['subject'] = t('Steps');
//  $block['content'] = l(t('AJAX'), 'system/ajax', array('attributes' => array('class' => array('abdiepost', 'use-ajax'))));
//
//  return $block;
//}
